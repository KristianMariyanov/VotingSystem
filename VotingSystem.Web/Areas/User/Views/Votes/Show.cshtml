@using VotingSystem.Web.Areas.User.ViewModels

@{
    const string ControllerName = "Votes";
    ViewBag.Title = "Show Votes";
}

@(Html.Kendo().Grid<UserVotesViewModel>()
      .Name("DataGrid")
      .Columns(columns =>
          {
              columns.Bound(col => col.Id);
              columns.Bound(col => col.Title);
              columns.Bound(col => col.Author);
              columns.Bound(col => col.NumberOfVotes);
              columns.Bound(col => col.IsPublic);
              columns.Bound(col => col.Voters).Hidden();
              columns.Bound(col => col.EndDate).Format("{0:dd/MM/yyyy HH:mm}");
              columns.Bound(col => col.Description);
              columns.Command(command => command.Edit().Text(" ").UpdateText("Запазване").CancelText("Отказ")).Width(80);
              columns.Command(command => command.Destroy().Text(" ")).Width(80);
          })
      .ToolBar(toolbar =>
               {
                   toolbar.Create().Text("Създай");
               })
      .Editable(editable =>
                {
                    editable.Mode(GridEditMode.PopUp);
                    editable.Window(w => w.Title(ViewBag.Title));
                    editable.DisplayDeleteConfirmation("Наистина ли искате да изтриете елемента?");
                })
                .ColumnMenu()
                .Pageable(x => x.Refresh(true))
                .Sortable(x => x.Enabled(true).AllowUnsort(false))
                .Filterable(x => x.Enabled(true))
                .Reorderable(x => x.Columns(true))
                .Resizable(x => x.Columns(true))
                .Events(x => x.Edit("onEdit"))
                .DataSource(datasource => datasource
                    .Ajax()
                    .ServerOperation(true)
                    .Model(model => model.Id(m => m.Id))
                    .Sort(sort => sort.Add(x => x.Id).Descending())
                    .Read(read => read.Action("Read", ControllerName))
                    .Create(create => create.Action("Create", ControllerName))
                    .Update(update => update.Action("Update", ControllerName))
                    .Destroy(destroy => destroy.Action("Destroy", ControllerName))
                )
)


@section scripts{
    @Scripts.Render("~/bundles/jqueryajax")
    <script type="text/javascript">
        function onEdit(ev) {
            if (ev.model.isNew()) {
                $("#Voters").prop('disabled', false);
            }

            $('#IsPublic').change(function() {
                $("#Voters").prop('disabled', function(i, v) { return !v; });
            });
        }

        function errorHandler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function(key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function() {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
    </script>
}





