@using VotingSystem.Web.Areas.User.ViewModels
@using VotingSystem.Web.Infrastructure.Helpers

@{
    const string ControllerName = "Polls";
    ViewBag.Title = "Show Polls";
}

@(Html.Kendo().Grid<UserPollsViewModel>()
      .Name("DataGrid")
      .Columns(columns =>
          {
              columns.Bound(col => col.Id);
                   columns.Bound(col => col.Title);
                   columns.Bound(col => col.Author);
                   columns.Bound(col => col.EndDate).Format("{0:dd/MM/yyyy HH:mm}");
                   columns.Bound(col => col.Description);
                   columns.Command(command => command.Edit().Text(" ").UpdateText("Запазване").CancelText("Отказ")).Width(80);
                   columns.Command(command => command.Destroy().Text(" ")).Width(80);
               })
      .ToolBar(toolbar =>
               {
                   toolbar.Create().Text("Създай");
                })
      .Editable(editable =>
                {
                    editable.Mode(GridEditMode.PopUp);
                    editable.Window(w => w.Title(ViewBag.Title));
                    editable.DisplayDeleteConfirmation("Наистина ли искате да изтриете елемента?");
                })
      .ColumnMenu()
      .Pageable(x => x.Refresh(true))
      .Sortable(x => x.Enabled(true).AllowUnsort(false))
      .Filterable(x => x.Enabled(true))
      .Reorderable(x => x.Columns(true))
      .Resizable(x => x.Columns(true))
      .DataSource(datasource => datasource
          .Ajax()
          .ServerOperation(true)
          .Model(model => model.Id(m => m.Id))
          .Sort(sort => sort.Add(x => x.Id).Descending())
          .Read(read => read.Action("Read", ControllerName))
          .Create(create => create.Action("Create", ControllerName))
          .Update(update => update.Action("Update", ControllerName))
          .Destroy(destroy => destroy.Action("Destroy", ControllerName))
      )
)


@*<h2>@ViewBag.Title</h2>
@(Html.FullFeaturedGrid<UserPollsViewModel>(ControllerName, m => m.Id, columns =>
{
    columns.Bound(c => c.Title).ClientTemplate("<a href=\"/Pastes/Details/#: Id #\"><strong>#: Title #<strong></a>");
    columns.Bound(c => c.Description);
    columns.Bound(c => c.Author).EditorTemplateName("Empty");
    columns.Bound(c => c.Description);
    columns.Bound(c => c.IsPublic);
    columns.Bound(c => c.EndDate).Format("{0:MM/dd/yyyy}");
    columns.Command(
        command =>
            {
                command.Edit();
                command.Destroy();
            });
}))*@


@section scripts{
    @Scripts.Render("~/bundles/jqueryajax")
    <script type="text/javascript">
        function errorHandler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
    </script>
}

